plugins {
    id 'com.zeroc.gradle.ice-builder.slice' version '1.4.7' apply false
    id 'com.github.johnrengelman.shadow' version '6.1.0' apply false
}

def iceUsingProjects = ['votingTable', 'server', 'reliableServer', 'proxySync', 'queryDevice']

task fatJarAll {
    group = 'build'
    description = 'Genera todos los fat JARs ejecutables de los subproyectos'
    dependsOn subprojects.findAll { it.tasks.findByName('fatJar') != null }.collect { it.tasks.fatJar }
}

subprojects {
    apply plugin: 'java'

    repositories {
        mavenCentral()
    }

    def mainClassName = project.name.capitalize()
    def mainJavaFile = file("${project.projectDir}/src/main/java/${mainClassName}.java")

    if (mainJavaFile.exists()) {
        apply plugin: 'com.github.johnrengelman.shadow'

        jar {
            manifest {
                attributes 'Main-Class': mainClassName
            }
        }

        tasks.register('fatJar', com.github.jengelman.gradle.plugins.shadow.tasks.ShadowJar) {
            group = 'build'
            description = "Fat JAR para ${project.name}"
            archiveBaseName.set("${project.name}")
            archiveClassifier.set('fat')
            from sourceSets.main.output
            configurations = [project.configurations.runtimeClasspath]
            manifest {
                attributes 'Main-Class': mainClassName
            }
        }

        build.dependsOn tasks.named('fatJar')
    }
}

project(':votingTable') {
    apply plugin: 'com.zeroc.gradle.ice-builder.slice'

    dependencies {
        implementation 'com.zeroc:ice:3.7.10'
        implementation project(':reliableServer')
    }

    slice {
        java {
            files = [
                file("${rootProject.projectDir}/Voting.ice"),
                file("${rootProject.projectDir}/ReliableMessage.ice")
            ]
        }
    }

    sourceSets.main.java.srcDirs += file("$buildDir/generated-src/slice/java")
}

project(':server') {
    apply plugin: 'com.zeroc.gradle.ice-builder.slice'

    dependencies {
        implementation 'com.zeroc:ice:3.7.10'
        implementation project(':reliableServer')
    }

    slice {
        java {
            files = [
                file("${rootProject.projectDir}/Voting.ice"),
                file("${rootProject.projectDir}/ReliableMessage.ice")
            ]
        }
    }

    sourceSets.main.java.srcDirs += file("$buildDir/generated-src/slice/java")
}

project(':proxySync') {
    apply plugin: 'com.zeroc.gradle.ice-builder.slice'

    dependencies {
        implementation 'com.zeroc:ice:3.7.10'
        implementation project(':reliableServer')
    }

    slice {
        java {
            files = [
                file("${rootProject.projectDir}/Voting.ice"),
                file("${rootProject.projectDir}/ReliableMessage.ice")
            ]
        }
    }

    sourceSets.main.java.srcDirs += file("$buildDir/generated-src/slice/java")
}

project(':reliableServer') {
    apply plugin: 'com.zeroc.gradle.ice-builder.slice'

    dependencies {
        implementation 'com.zeroc:ice:3.7.10'
    }

    slice {
        java {
            files = [
                file("${rootProject.projectDir}/Voting.ice"),
                file("${rootProject.projectDir}/ReliableMessage.ice"),
                file("${rootProject.projectDir}/BrokerIce.ice"),
                file("${rootProject.projectDir}/Query.ice"),
                file("${rootProject.projectDir}/ReliableQ.ice")
            ]
        }
    }

    sourceSets.main.java.srcDirs += file("$buildDir/generated-src/slice/java")
}

project(':queryDevice') {
    apply plugin: 'com.zeroc.gradle.ice-builder.slice'

    dependencies {
        implementation 'com.zeroc:ice:3.7.10'
        implementation project(':broker')
    }

    slice {
        java {
            files = [file("${rootProject.projectDir}/Query.ice")]
        }
    }

    sourceSets.main.java.srcDirs += file("$buildDir/generated-src/slice/java")
}

project(':queryProxy') {
    apply plugin: 'com.zeroc.gradle.ice-builder.slice'

    dependencies {
        implementation 'com.zeroc:ice:3.7.10'
        implementation project(':broker')
    }

    slice {
        java {
            files = [file("${rootProject.projectDir}/Query.ice")]
        }
    }

    sourceSets.main.java.srcDirs += file("$buildDir/generated-src/slice/java")
}

project(':queryServer') {
    apply plugin: 'com.zeroc.gradle.ice-builder.slice'

    dependencies {
        implementation 'com.zeroc:ice:3.7.10'
        implementation 'org.postgresql:postgresql:42.7.2'
        implementation 'com.zaxxer:HikariCP:6.2.0'
        implementation 'org.slf4j:slf4j-api:2.0.13'
        implementation 'org.slf4j:slf4j-simple:2.0.13'

    }

    slice {
        java {
            files = [file("${rootProject.projectDir}/Query.ice")]
        }
    }

    sourceSets.main.java.srcDirs += file("$buildDir/generated-src/slice/java")
}

project(':broker') {
    apply plugin: 'com.zeroc.gradle.ice-builder.slice'

    dependencies {
        implementation 'com.zeroc:ice:3.7.10'
    }

    slice {
        java {
            files = [file("${rootProject.projectDir}/BrokerIce.ice")]
        }
    }

    sourceSets.main.java.srcDirs += file("$buildDir/generated-src/slice/java")
}

project(':loadTester') {
    apply plugin: 'com.zeroc.gradle.ice-builder.slice'

    dependencies {
        implementation 'com.zeroc:ice:3.7.10'
        implementation project(':votingTable')
    }

    slice {
        java {
            files = [file("${rootProject.projectDir}/Voting.ice")]
        }
    }

    sourceSets.main.java.srcDirs += file("$buildDir/generated-src/slice/java")
}


project(':queryTester') {
    apply plugin: 'com.zeroc.gradle.ice-builder.slice'

    dependencies {
        implementation 'com.zeroc:ice:3.7.10'
        implementation project(':queryDevice')
    }

    slice {
        java {
            files = [file("${rootProject.projectDir}/Query.ice")]
        }
    }

    sourceSets.main.java.srcDirs += file("$buildDir/generated-src/slice/java")
}


